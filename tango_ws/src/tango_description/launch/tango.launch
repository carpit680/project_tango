<launch>
  
  <!--### Launch robot model and world in gazebo### -->
  <!-- Set WORLD_ID to default_world if worldId envvar is not defined,
       default_world should refer to a default world during exporting process for worldforge
  -->
  <arg name="worldId" default="$(optenv WORLD_ID generation_vcmjltr6nh36_world_1)" doc="WorldId to load"/>

  <param command="$(find xacro)/xacro $(find tango_description)/urdf/tango.xacro" name="robot_description"/>
  <node args="-param robot_description -urdf -Y -1.57 -model tango" name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!-- <arg name="world_name" value="$(find my_worlds)/worlds/maze.world"/>  -->
    <!-- <arg name="world_name" value="$(find my_worlds)/worlds/obstacle.world"/> -->
    <arg name="world_name" value="$(find aws_robomaker_worldforge_worlds)/worlds/$(arg worldId)/$(arg worldId).world"/>
    <arg name="use_sim_time" value="true"/>
    <!-- Always set GUI to false for AWS RoboMaker Simulation
       Use gui:=true on roslaunch command-line to run with a gui.-->
    <arg name="gui" value="true"/>
    <arg name="verbose" default="true"/>
    <!-- <arg name="paused" value="false"/> -->
    <!-- <arg name="headless" value="false"/>
    <arg name="debug" value="false"/> -->
  </include>

  <!-- ###For Rviz### -->
  <arg default="$(find tango_description)/urdf/tango.xacro" name="model"/>
  <arg default="false" name="gui"/>
  <arg default="$(find tango_description)/launch/urdf.rviz" name="rvizconfig"/>
  <param command="$(find xacro)/xacro $(arg model)" name="robot_description"/>
  <param name="use_gui" value="$(arg gui)"/>
  
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
  <node args="-d $(arg rvizconfig)" name="rviz" pkg="rviz" required="true" type="rviz"/>

  <!-- ###Include launch file for obstacle avoidance### -->
  <include file="$(find motion_plan)/launch/obs.launch">
  </include>
  <!-- ###Start node for teleop keyboard control### -->
  <!-- <node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" name="teleop" output="screen">
    <param name="scale_linear" value="0.5" type="double"/>
    <param name="scale_angular" value="1.5" type="double"/>
  </node> -->

</launch>
